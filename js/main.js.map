{"version":3,"sources":["main.js"],"names":[],"mappingsfile":"main.js","sourcesContent":["/**\n  * название функции\n  *\n  * @param {number} first - первое число\n  * @returns {number}\n  */\n\nclass SLIDER {\n    constructor(options) {\n\n        this.slider = document.querySelector(options.slider);\n        this.sliderLine = this.slider.querySelector('.header-slider__line');\n        this.slides = this.sliderLine.children;\n        this.next = this.slider.querySelector('.slider__next');\n        this.prev = this.slider.querySelector('.slider__prev');\n\n        this.dir = options.direction.toUpperCase() == 'X' ? 'X' : 'Y';\n        this.timeMove = options.time != undefined ? options.time : 1000;\n        this.width = this.slider.clientWidth;\n        this.height = this.slider.clientHeight;\n        this.moveSize = \"X\" === this.dir ? this.width : this.height;\n\n        this.activeSlide = 0;\n        this.sliderLine.style = `\n                               position:relative;\n                               overflow:hidden;`\n\n        for (let i = 0; i < this.slides.length; i++) {\n            const sl = this.slides[i];\n            sl.style = ` position:absolute;\n                         width: ${this.width}px;\n                         height: ${this.height}px`;\n\n            if (i != this.activeSlide) {\n                sl.style.transform = `translate${this.dir}(${this.moveSize}px)`\n                // sl.style.transform = `scale(0.9)`;\n                // sl.style.opacity = `0.5`;\n                // this.slides[this.activeSlide].style.transform = `scale(0.9)`;\n                // this.slides[this.activeSlide].style.opacity = `1`;\n            }\n            if (i === this.slides.length - 1) {\n                sl.style.transform = `translate${this.dir}(${-this.moveSize}px)`\n            }\n        }\n        if (options.autoplay) {\n            let interval = setInterval(() => {\n                this.move(this.next);\n            }, this.timeMove);\n            this.slider.addEventListener('mouseenter', () => { clearInterval(interval) })\n            this.slider.addEventListener('mouseleave', () => {\n                interval = setInterval(() => {\n                    this.move(this.next);\n                }, this.timeMove)\n            })\n        }\n        this.next.addEventListener('click', () => this.move(this.next))\n        this.prev.addEventListener('click', () => this.move(this.prev))\n\n        window.addEventListener('resize', () => {\n            this.width = this.slider.clientWidth;\n            this.height = this.slider.clientHeight;\n            this.moveSize = \"X\" === this.dir ? this.width : this.height;\n            this.sliderLine.style = `\n                               position:relative;\n                               overflow:hidden;`\n            for (let i = 0; i < this.slides.length; i++) {\n                const sl = this.slides[i];\n                sl.style = ` position:absolute;\n                                             width: ${this.width}px;\n                                             height: ${this.height}px`;\n                if (i != this.activeSlide) {\n                    sl.style.transform = `translate${this.dir}(${this.moveSize}px)`\n                }\n                if (i === this.slides.length - 1) {\n                    sl.style.transform = `translate${this.dir}(${-this.moveSize}px)`\n                }\n            }\n            // console.log(this.width);\n        })\n    }\n    move(btn) {\n        this.next.disabled = true;\n        this.prev.disabled = true;\n        setTimeout(() => {\n            this.next.disabled = false;\n            this.prev.disabled = false;\n        }, this.timeMove + 50);\n\n        let btnLeftOrRight = btn == this.next ? this.moveSize * -1 : this.moveSize;\n        for (let i = 0; i < this.slides.length; i++) {\n            const slide = this.slides[i];\n            slide.style.transition = '0ms';\n            // slide.style.display = `block`;\n            if (i != this.activeSlide) {\n                slide.style.transform = `translate${this.dir}(${btnLeftOrRight * -1}px)`;\n                // slide.style.display = `none`;\n            }\n\n        }\n        this.slides[this.activeSlide].style.transform = `translate${this.dir}(${btnLeftOrRight}px)`;\n        this.slides[this.activeSlide].style.transition = this.timeMove + 'ms ease';\n        if (btn == this.next) {\n            this.activeSlide++;\n            if (this.activeSlide >= this.slides.length) {\n                this.activeSlide = 0;\n                // console.log(this.activeSlide.style.display = `block`);\n            }\n        }\n        else if (btn == this.prev) {\n            this.activeSlide--;\n            if (this.activeSlide < 0) {\n                this.activeSlide = this.slides.length - 1;\n            }\n        }\n        this.slides[this.activeSlide].style.transform = `translate${this.dir}(0px)`;\n        // this.slides[this.activeSlide].style.transform = `translateY(2%)`;\n        // this.slides[this.activeSlide].style.transform = `scale(1.05)`;\n        // this.slides[this.activeSlide].style.display = `block`;\n\n        // const words = ['spray', 'limit', 'elite', 'exuberant', 'destruction', 'present'];\n        // let newArray = arr.filter(callback( this.slides[this.activeSlide]));\n\n        // const result = this.slides.filter(this.slides => this.slides != this.slides[this.activeSlide]);\n        // const result = this.slides.filter(this.slides => this.slides [i]!= this.slides[this.activeSlide]);\n\n        // this.slides[this.activeSlide].style = `transform: scale(1.05);\n        //                                     transform : translateY(2%)`;\n        // this.sliderLine.this.slides[this.activeSlide].style.transform = `translateY(-10%)`;\n        // this.slides[this.activeSlide].children.style.width = `100%`;\n\n        // this.slides[this.activeSlide].style = ` transform: translate${this.dir}(0px) scale(0.5);\n        //                                         opacity: 1;\n        //                                         ${this.timeMove}ms`;\n        // this.slides[this.activeSlide].style.opacity = `1`;\n        this.slides[this.activeSlide].style.transition = this.timeMove + 'ms'\n\n    }\n}\n\nconst slider = new SLIDER({\n    slider: '.header-slider',\n    direction: 'X',\n    time: 1000,\n    autoplay: false\n})\n//Второй слайдер секции food\n// const slider2 = new SLIDER({\n//     slider: '.food-slider',\n//     direction: 'X',\n//     time: 1000,\n//     autoplay: false\n// })\nconst launcherSliderBlock = document.querySelector('.food-block-content-arrow');\nconst launcherSlider = document.querySelector('.food-block-content-arrow__item-link');\nconst foodContainerRow = document.querySelector('.food-container-row');\n\nlauncherSlider.onlick = (e) =>{\n    e.preventDefault();\n    console.log(\"sdad\");\n    // foodContainerRow.classList.add('food-slider');\n    // launcherSlider.style= `display:none`;\n}\n\n\n\n\n\n//бургер и все что с ним связано\nconst burger = document.querySelector('.burger');\nconst burgerLine = document.querySelector('.burger__line');\nconst headerNavContainer = document.querySelector('.header-nav-container');\n\n\nburger.onclick = () => {\n    burger.classList.toggle(\"active\");\n    headerNavContainer.classList.toggle('activePopup');\n}\n\nconst checkbox = document.getElementById('myonoffswitch');\nconst onoffswitch = document.getElementById('onoffswitch');\nconst switchBtn = document.querySelector('.switch-btn');\n\nconst headerNavUserColor = document.querySelector('.header-nav-user-color');\nconst headerNavUserItem = document.querySelector('.header-nav-user__item');\nconst headerNavUserItemIcon = document.querySelector('.header-nav-user__item-icon');\nconst foodBlockContentText = document.querySelectorAll('.food-block-content-text');\nconst headLink = document.head.children[5];\nheadLink.setAttribute('href', 'favicon/favicon-red.ico');\n\nswitchBtn.onclick = () => {\n    switchBtn.classList.toggle('switch-on');\n    if (switchBtn.classList.contains('switch-on')) {\n        body.classList.add('green');\n        body.classList.remove('red');\n        headLink.setAttribute('href', 'favicon/favicon-green.ico');\n        foodBlockContentText.forEach(element => {\n            element.classList.remove('red-bg-opacity');\n            element.classList.add('green-bg-opacity');\n        });\n    }\n    else {\n        body.classList.add('red');\n        body.classList.remove('green');\n        headLink.setAttribute('href', 'favicon/favicon-red.ico');\n        foodBlockContentText.forEach(element => {\n            element.classList.remove('green-bg-opacity');\n            element.classList.add('red-bg-opacity');\n        });\n\n    }\n}\nheaderNavUserItem.onclick = () => {\n    headerNavUserColor.classList.toggle('is-hidden');\n    headerNavUserItemIcon.classList.toggle('is-rotated');\n}\n//настройка маски для инпута количества людей\nconst patternData = /\\D/g;\ndocument.getElementById( 'people' ).oninput = function(e) {\n    let cursor = this.selectionStart, pattern = patternData;\n      if ( this.value.match( pattern ) ) {\n        this.value = this.value.replace( pattern, '' );\n        cursor--;\n      }\n      this.selectionEnd = cursor;\n  }\n\n//   console.log(document.head.children[5].setAttribute('href', 'favicon/favicon-green.ico'));\n  \n// // Подключает\n// function addStyleSheets (href) {\n//     var $head = document.head,\n//         $link = document.createElement('link');\n\n//     $link.rel = 'stylesheet';\n//     $link.href = href;\n\n//     $head.appendChild($link);\n// }\n\n// // Отключает по ссылке\n// function disableStyleSheets (href) {\n//     var styles = document.styleSheets;\n//     for (i in styles) {\n//         if (styles[i].href == href) {\n//             styles[i].disabled = true;\n//         }\n//     }\n// }\n\n// // Примеры\n// addStyleSheets('путь/до/файла/со/стилями.css');     // Подключаем\n// disableStyleSheets('путь/до/файла/со/стилями.css'); // Отключаем"]}